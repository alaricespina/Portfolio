from telethon import TelegramClient, sync, events
from telethon.tl.functions.messages import GetHistoryRequest, GetBotCallbackAnswerRequest
from telethon.errors import SessionPasswordNeededError
from telethon.errors import FloodWaitError
from time import sleep
import json,re,sys,os

try:
   import requests\n   from bs4 import BeautifulSoup\nexcept:\n   print ("\\033[1;30m# \\033[1;31mHmmm Sepertinya Modul Requests Dan Bs4 Belum Terinstall\\n\\033[1;30m# \\033[1;31mTo install Please Type pip install requests and pip install bs4")\n   sys.exit()\n\nc = requests.Session()\n\n\nbanner = """\\033[0;35m       __       _       __\n      / /__    (_)___ _/ /______ _\n __  / / _ \\  / / __ `/ //_/ __ `/\n/ /_/ /  __/ / / /_/ / ,< / /_/ /\n\\____/\\___/_/ /\\__,_/_/|_|\\__,_/\n         /___/\n\\033[0;34m=========================================================\n\\033[1;32mAuthor By  \\033[1;31m :\\033[1;0m Kadal15\n\\033[1;32mChannel Yt\\033[1;31m  : \\033[1;0mJejaka Tutorial\n\\033[1;32mSupported By \\033[1;31m:\\033[1;0m ALFRED\xe2\x9d\xa4\xef\xb8\x8f"""\n\nif not os.path.exists("session"):\n    os.makedirs("session")\n\nprint (banner)\nif len(sys.argv)<2:\n   print ("\\n\\n\\n\\033[1;32mUsage : python main.py +62")\n   sys.exit(1)\n\ndef password():\n  c = requests.Session()\n\n  if not os.path.exists(".password"):\n      os.makedirs(".password")\n\n  print("\\033[1;32mSilahkan Ambil Password Pada Link Di Bawah Ini\\033[1;0m\\nhttp://jejakainc.com/Password/")\n  pw = c.get("http://jejakainc.com/Password/Passw.txt")\n  if not os.path.exists(".password/password.txt"):\n      f = open(".password/password.txt", "w+")\n      f.write("wkwkwkwkw")\n      f.close()\n\n  for i in range(99):\n      f = open(".password/password.txt", "r")\n      if f.readlines()[0] == pw.text:\n          sys.stdout.write(\'\\r                                                \\r\')\n          sys.stdout.write(\'\\r\\033[1;32mUsing Exiting Password....!\')\n          break\n      pwin = input("\\033[1;32mEnter Password \\033[1;30m:\\033[1;0m ")\n      if pwin == pw.text:\n          f = open(".password/password.txt", "w+")\n          f.write(pwin)\n          f.close()\n          break\n      else:\n          print("\\033[1;31mPassword Salah...!")\n          if i > 1:\n              print("\\033[1;33mSilahkan Check Password Pada Link Di Bawah Ini\\n\\033[1;0mhttp://jejakainc.com/Password/")\n              sys.exit()\n\n\ndef tunggu(x):\n    sys.stdout.write("\\r")\n    sys.stdout.write("                                                               ")\n    for remaining in range(x, 0, -1):\n       sys.stdout.write("\\r")\n       sys.stdout.write("\\033[1;30m#\\033[1;0m{:2d} \\033[1;32mseconds remaining".format(remaining))\n       sys.stdout.flush()\n       sleep(1)\n\n\nua={"User-Agent": "Mozilla/5.0 (Linux; Android 5.1; A1603 Build/LMY47I; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36"}\n\n\n\napi_id = 717425\napi_hash = \'322526d2c3350b1d3530de327cf08c07\'\nphone_number = sys.argv[1]\n\nclient = TelegramClient("session/"+phone_number, api_id, api_hash)\nclient.connect()\nif not client.is_user_authorized():\n  try:\n    client.send_code_request(phone_number)\n    me = client.sign_in(phone_number, input(\'\\n\\n\\n\\033[1;0mEnter Your Code : \'))\n  except SessionPasswordNeededError:\n   passw = input("\\033[1;0mYour 2fa Password : ")\n   me = client.start(phone_number,passw)\nmyself = client.get_me()\nos.system("clear")\nprint (banner)\nprint ("\\033[1;32mWelcome To TeleBot",myself.first_name,"\\n\\033[1;32mBot Ini Di Gunakan Untuk Menuyul Doge Click Bot")\n\n\n\n\npassword()\nprint ("\\n\\n\\033[1;37mMemulai Menuyul......!")\ntry:\n channel_entity=client.get_entity("@Dogecoin_click_bot")\n channel_username="@Dogecoin_click_bot"\n for i in range(5000000):\n  sys.stdout.write("\\r")\n  sys.stdout.write("                                                              ")\n  sys.stdout.write("\\r")\n  sys.stdout.write("\\033[1;30m# \\033[1;33mMencoba Mengambil URL")\n  sys.stdout.flush()\n  client.send_message(entity=channel_entity,message="\xf0\x9f\x96\xa5 Visit sites")\n  sleep(3)\n  posts = client(GetHistoryRequest(peer=channel_entity,limit=1,offset_date=None,offset_id=0,max_id=0,min_id=0,add_offset=0,hash=0))\n  if posts.messages[0].message.find("Sorry, there are no new ads available") != -1:\n     print ("\\n\\033[1;30m# \\033[1;31mIklan Sudah Habis Coba Lagi Besok\\n")\n     client.send_message(entity=channel_entity,message="\xf0\x9f\x92\xb0 Balance")\n     sleep(5)\n     posts = client(GetHistoryRequest(peer=channel_entity,limit=1,offset_date=None,offset_id=0,max_id=0,min_id=0,add_offset=0,hash=0))\n     message = posts.messages[0].message\n     print (message)\n     sys.exit()\n  else:\n    try:\n     url = posts.messages[0].reply_markup.rows[0].buttons[0].url\n     sys.stdout.write("\\r")\n     sys.stdout.write("\\033[1;30m# \\033[1;33mVisit "+url)\n     sys.stdout.flush()\n     id = posts.messages[0].id\n     r = c.get(url, headers=ua, timeout=15, allow_redirects=True)\n     soup = BeautifulSoup(r.content,"html.parser")\n     if soup.find("div",class_="g-recaptcha") is None and soup.find(\'div\', id="headbar") is None:\n        sleep(2)\n        posts = client(GetHistoryRequest(peer=channel_entity,limit=1,offset_date=None,offset_id=0,max_id=0,min_id=0,add_offset=0,hash=0))\n        message = posts.messages[0].message\n        if posts.messages[0].message.find("You must stay") != -1 or posts.messages[0].message.find("Please stay on") != -1:\n           sec = re.findall( r\'([\\d.]*\\d+)\', message)\n           tunggu(int(sec[0]))\n           sleep(1)\n           posts = client(GetHistoryRequest(peer=channel_entity,limit=2,offset_date=None,offset_id=0,max_id=0,min_id=0,add_offset=0,hash=0))\n           messageres = posts.messages[1].message\n           sleep(2)\n           sys.stdout.write("\\r\\033[1;30m# \\033[1;32m"+messageres+"\\n")\n        else:\n           pass\n\n\n     elif soup.find(\'div\', id="headbar") is not None:\n        for dat in soup.find_all(\'div\',class_="container-fluid"):\n            code = dat.get(\'data-code\')\n            timer = dat.get(\'data-timer\')\n            tokena = dat.get(\'data-token\')\n            tunggu(int(timer))\n            r = c.post("https://dogeclick.com/reward",data={"code":code,"token":tokena}, headers=ua, timeout=15, allow_redirects=True)\n            js = json.loads(r.text)\n            sys.stdout.write("\\r\\033[1;30m# \\033[1;32mYou earned "+js[\'reward\']+" Doge for visiting a site!\\n")\n     else:\n        sys.stdout.write("\\r")\n        sys.stdout.write("                                                                ")\n        sys.stdout.write("\\r")\n        sys.stdout.write("\\033[1;30m# \\033[1;31mCaptcha Detected")\n        sys.stdout.flush()\n        sleep(2)\n        client(GetBotCallbackAnswerRequest(\n        channel_username,\n        id,\n        data=posts.messages[0].reply_markup.rows[1].buttons[1].data\n        ))\n        sys.stdout.write("\\r\\033[1;30m# \\033[1;31mSkip Captcha...!       \\n")\n        sleep(2)\n    except:\n        sleep(3)\n        posts = client(GetHistoryRequest(peer=channel_entity,limit=1,offset_date=None,offset_id=0,max_id=0,min_id=0,add_offset=0,hash=0))\n        message = posts.messages[0].message\n        if posts.messages[0].message.find("You must stay") != -1 or posts.messages[0].message.find("Please stay on") != -1:\n           sec = re.findall( r\'([\\d.]*\\d+)\', message)\n           tunggu(int(sec[0]))\n           sleep(1)\n           posts = client(GetHistoryRequest(peer=channel_entity,limit=2,offset_date=None,offset_id=0,max_id=0,min_id=0,add_offset=0,hash=0))\n           messageres = posts.messages[1].message\n           sleep(2)\n           sys.stdout.write("\\r\\033[1;30m# \\033[1;32m"+messageres+"\\n")\n        else:\n           pass\n\nfinally:\n   client.disconnect()\n\n'